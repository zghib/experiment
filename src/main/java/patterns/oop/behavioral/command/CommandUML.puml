@startuml

note top of (Client)
implement lose coupling in a request-response model.
In command pattern, the request is send to the invoker and invoker pass it to
the encapsulated command object. Command object passes the request to the
appropriate method of Receiver to perform the specific action.
The client program create the receiver object and then attach it to the Command.
Then it creates the invoker object and attach the command object to perform an action.
Now when client program executes the action, itâ€™s processed based on the command and
receiver object.
end note

class Client{

}

note right of Client
end note

Client --> Receiver

class Receiver{
+action()
}

Invoker o--> Command
class Command{
 +execute()
}

ConcreteCommand --> Receiver
class ConcreteCommand{
state
+execute()
}

Command <|-- ConcreteCommand
Client ..> ConcreteCommand

@enduml